/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Appointments {
  created_at: Generated<string>;
  end_time: string;
  id: Generated<number | null>;
  patient_id: number;
  practitioner_id: number;
  start_time: string;
}

export interface Audits {
  action: string;
  id: Generated<number | null>;
  record_id: number;
  table_name: string;
  timestamp: Generated<string>;
  user_id: number | null;
}

export interface Patients {
  created_at: Generated<string | null>;
  email: string;
  id: Generated<number | null>;
  name: string;
  user_id: number;
}

export interface Practitioners {
  created_at: Generated<string | null>;
  email: string;
  id: Generated<number | null>;
  name: string;
  user_id: number;
}

export interface Users {
  created_at: Generated<string | null>;
  email: string;
  id: Generated<number | null>;
  password: string;
  username: string;
}

export interface DB {
  appointments: Appointments;
  audits: Audits;
  patients: Patients;
  practitioners: Practitioners;
  users: Users;
}
